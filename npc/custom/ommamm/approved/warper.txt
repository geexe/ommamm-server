prt_monk,168,179,5	script	Warper	10079,{
function Go; function Disp; function Pick; function Restrict;

//Ommamm Custom
function Fee {
	//Check Level before warp
	.@eac = eaclass();
	.@cost = 0;
	if((.@eac&EAJL_UPPER) || (.@eac&EAJL_THIRD)) {
		.@cost += 10000;
	}
	if(BaseLevel > 99) {
		for(.@i = 100; .@i <= BaseLevel; .@i +=5) {
			.@cost += 5000;
		}
	}
	if(.@cost) {
		mes "[Warper]";
		mes "You need to pay " +  callfunc("F_InsertComma",.@cost) + " zeny to use Warper Service.";
		mes " ";
		mes "The fee starts at 10,000z for Transcendent or Third-Class character and increases by 5,000 every 5 level starting at level 100.";
		mes " ";
		mes "Do you wish to pay?";
		next;
		switch(select("Yes:No")) {
			case 1:
				if (zeny < .@cost) {
					mes "[Warper]";
					mes "You do not have enough zeny.";
					close;
				}
				zeny -= .@cost;
				return;
			case 2:
				mes "[Warper]";
				mes "See you next time.";
				close;
		}
	}
}

// --------------------------------------------------
//	Main Menu:
// --------------------------------------------------

menu	"Last Warp ^777777["+lastwarp$+"]^000000",-,
    	/*" ~ Towns",Towns,*/
    	" ~ Fields",Fields,
    	" ~ Dungeons",Dungeons,
    	" ~ Guild Castles",Castles,
    	" ~ Guild Dungeons",Guild_Dungeons,
    	" ~ Instances",Instances,
    	" ~ Special Areas",Special;

	if (lastwarp$ == "")
		message strcharinfo(0),"You haven't warped anywhere yet.";
	else
		Fee;
		warp lastwarp$,lastwarpx,lastwarpy;
	end;

// ------------------- Functions -------------------
// * Go("<map>",<x>,<y>);
//	~ Warps directly to a map.
//
// * Disp("<Menu Option>",<first option>,<last option>);
// * Pick("<map_prefix>"{,<index offset>});
//	~ Dynamic menu and map selection (auto-numbered).
//
// * Disp("<Option 1>:<Option 2>:<etc.>");
// * Pick("","<map1>","<map2>","<etc.>");
//	~ Manual menu and map selection (listed).
//
// * Restrict("<RE | Pre-RE>"{,<menu option numbers>});
//	~ Only allows map for Renewal or Pre-Renewal modes.
//     If menu option numbers are given, only those maps
//     will be restricted (i.e. not for "Go").
//
// Other notes:
//   ~ Array @c[] holds all (x,y) coordinates.
//   ~ Use @c[2] EXCEPT when maps begin dynamically
//	  at 0: use @c[0] and Pick() offset 1.
// --------------------------------------------------


function Go {
	Fee;
	set lastwarp$, getarg(0);
	set lastwarpx, getarg(1,0);
	set lastwarpy, getarg(2,0);
	warp getarg(0),getarg(1,0),getarg(2,0);
	end;
}
function Disp {
	if (getargcount() < 3)
		set @menu$, getarg(0);
	else {
		set @menu$,"";
		for (set .@i,getarg(1); .@i<=getarg(2); set .@i,.@i+1)
			set @menu$, @menu$+getarg(0)+" "+.@i+":";
	}
	return;
}
function Pick {
	set .@warp_block,@warp_block;
	set @warp_block,0;
	set .@select, select(@menu$);
	if (getarg(0) == "") {
		set .@i, .@select;
		set .@map$, getarg(.@i);
	} else {
		set .@i, .@select-getarg(1,0);
		set .@map$, getarg(0)+((.@i<10)?"0":"")+.@i;
	}
	if (.@warp_block & (1<<.@select)) {
		message strcharinfo(0),"This map is not enabled in "+((checkre(0))?"":"Pre-")+"Renewal.";
		end;
	}
	set .@x, @c[.@i*2];
	set .@y, @c[.@i*2+1];
	deletearray @c[0],getarraysize(@c);
	Go(.@map$,.@x,.@y);
}
function Restrict {
	if ((getarg(0) == "RE" && !checkre(0)) || (getarg(0) == "Pre-RE" && checkre(0))) {
		if (getarg(1,0)) {
			set @warp_block,0;
			for (set .@i,1; .@i<getargcount(); set .@i,.@i+1)
				set @warp_block, @warp_block | (1<<getarg(.@i));
		} else {
			message strcharinfo(0),"This map is not enabled in "+((checkre(0))?"":"Pre-")+"Renewal.";
			end;
		}
	}
	return;
}

// --------------------------------------------------
	Towns:
// --------------------------------------------------
//menu	"Prontera",T1, "Alberta",T2, "Aldebaran",T3, "Amatsu",T4, "Ayothaya",T5,
//   	"Brasilis",T6, "Comodo",T7, "Dewata",T8, "Eclage",T9, "Einbech",T10, 
//    	"Einbroch",T11, "El Dicastes",T12, "Geffen",T13, "Gonryun",T14, "Hugel",T15,
//    	"Izlude",T16, "Jawaii",T17, "Lighthalzen",T18, "Louyang",T19, "Lutie",T20,
//   	"Malangdo",T21, "Malaya",T22, "Manuk",T23, "Midgarts Expedition Camp",T24,
//    	"Mora",T25, "Morroc",T26, "Moscovia",T27, "Nameless Island",T28,
//    	"Niflheim",T29, "Payon",T30, "Rachel",T31, "Splendide",T32, "Thor Camp",T33,
//    	"Umbala",T34, "Veins",T35, "Yuno",T36;
//
//T1: Go("prontera",155,183);
//T2: Go("alberta",28,234);
//T3: Go("aldebaran",140,131);
//T4: Go("amatsu",198,84);
//T5: Go("ayothaya",208,166);
//T6: Restrict("RE");
//	Go("brasilis",196,217);
//T7: Go("comodo",209,143);
//T8: Restrict("RE");
//	Go("dewata",200,180);
//T9: Restrict("RE");
//	Go("ecl_in01",48,53);
//T10: Go("einbech",63,35);
//T11: Go("einbroch",64,200);
//T12: Restrict("RE");
//	 Go("dicastes01",198,187);
//T13: Go("geffen",119,59);
//T14: Go("gonryun",160,120);
//T15: Go("hugel",96,145);
//T16: Go("izlude",128,(checkre(3)?146:114));
//T17: Go("jawaii",251,132);
//T18: Go("lighthalzen",158,92);
//T19: Go("louyang",217,100);
//T20: Go("xmas",147,134);
//T21: Restrict("RE");
//	 Go("malangdo",140,114);
//T22: Restrict("RE");
//	 Go("malaya",231,200);
//T23: Go("manuk",282,138);
//T24: Go("mid_camp",210,288);
//T25: Restrict("RE");
//	 Go("mora",55,146);
//T26: Go("morocc",156,93);
//T27: Go("moscovia",223,184);
//T28: Go("nameless_n",256,215);
//T29: Go("niflheim",202,174);
//T30: Go("payon",179,100);
//T31: Go("rachel",130,110);
//T32: Go("splendide",201,147);
//T33: Go("thor_camp",246,68);
//T34: Go("umbala",97,153);
//T35: Go("veins",216,123);
//T36: Go("yuno",157,51);

// --------------------------------------------------
	Fields:
// --------------------------------------------------
menu	"Amatsu Fields",F1, "Ayothaya Fields",F2, "Bifrost Fields", F3,
    	"Brasilis Fields",F4, "Comodo Fields",F5, "Dewata Fields",F6,
    	/*"Eclage Fields",F7,*/ "Einbroch Fields",F8, "El Dicastes Fields",F9,
    	"Geffen Fields",F10, "Gonryun Fields",F11, "Hugel Fields",F12,
    	"Lighthalzen Fields",F13, "Louyang Field",F14, "Lutie Field",F15,
    	"Malaya Fields",F16, "Manuk Fields",F17, "Mjolnir Fields",F18,
    	"Moscovia Fields",F19, "Niflheim Fields",F20, "Payon Forests",F21,
    	"Prontera Fields",F22, "Rachel Fields",F23, "Sograt Deserts",F24,
    	"Splendide Fields",F25, "Umbala Fields",F26, "Veins Fields",F27,
    	"Yuno Fields",F28;

F1: setarray @c[2],190,197;
	Disp("Amatsu Field",1,1); Pick("ama_fild");
F2: setarray @c[2],173,134,212,150;
	Disp("Ayothaya Field",1,2); Pick("ayo_fild");
F3: Restrict("RE");
	setarray @c[2],193,220,220,187;
	Disp("Bifrost Field",1,2); Pick("bif_fild");
F4: Restrict("RE");
	setarray @c[2],74,32;
	Disp("Brasilis Field",1,1); Pick("bra_fild");
F5: Restrict("Pre-RE",5);
	setarray @c[2],180,178,231,160,191,172,228,194,224,203,190,223,234,177,194,175,172,172;
	Disp("Comodo Field",1,9); Pick("cmd_fild");
F6: Restrict("RE");
	setarray @c[2],371,212;
	Disp("Dewata Field",1,1); Pick("dew_fild");
//F7: Restrict("RE");
//	setarray @c[2],97,314;
//	Disp("Eclage Field",1,1); Pick("ecl_fild");
F8: Restrict("Pre-RE",2,10);
	setarray @c[2],142,225,182,141,187,228,185,173,216,173,195,148,272,220,173,214,207,174,196,200;
	Disp("Einbroch Field",1,10); Pick("ein_fild");
F9: Restrict("RE");
	setarray @c[2],143,132,143,217;
	Disp("El Dicastes Field",1,2); Pick("dic_fild");
F10: Restrict("Pre-RE",13,15);
	 setarray @c[0],46,199,213,204,195,212,257,192,188,171,166,263,248,158,195,191,186,183,221,117,178,218,136,328,240,181,235,235,211,185;
	 Disp("Geffen Field",0,14); Pick("gef_fild",1);
F11: setarray @c[2],220,227;
	 Disp("Gonryun Field",1,1); Pick("gon_fild");
F12: Restrict("Pre-RE",3,7);
	 setarray @c[2],268,101,222,193,232,185,252,189,196,106,216,220,227,197;
	 Disp("Hugel Field",1,7); Pick("hu_fild");
F13: setarray @c[2],240,179,185,235,240,226;
	 Disp("Lighthalzen Field",1,3); Pick("lhz_fild");
F14: setarray @c[2],229,187;
	 Disp("Louyang Field",1,1); Pick("lou_fild");
F15: setarray @c[2],115,145;
	 Disp("Lutie Field",1,1); Pick("xmas_fild");
F16: Restrict("RE");
	 setarray @c[2],40,272,207,180;
	 Disp("Malaya Field",1,2); Pick("ma_fild");
F17: setarray @c[2],35,236,35,262,84,365;
	 Disp("Manuk Field",1,3); Pick("man_fild");
F18: setarray @c[2],204,120,175,193,208,213,179,180,181,240,195,270,235,202,188,215,205,144,245,223,180,206,196,208;
	 Disp("Mjolnir Field",1,12); Pick("mjolnir_");
F19: setarray @c[2],82,104,131,147;
	 Disp("Moscovia Field",1,2); Pick("mosk_fild");
F20: setarray @c[2],215,229,167,234;
	 Disp("Niflheim Field",1,2); Pick("nif_fild");
F21: Restrict("Pre-RE",5,11);
	 setarray @c[2],158,206,151,219,205,148,186,247,134,204,193,235,200,177,137,189,201,224,160,205,194,150;
	 Disp("Payon Forest",1,11); Pick("pay_fild");
F22: setarray @c[0],208,227,190,206,240,206,190,143,307,252,239,213,185,188,193,194,187,218,210,183,195,149,198,164;
	 Disp("Prontera Field",0,11); Pick("prt_fild",1);
F23: Restrict("Pre-RE",2,7,9,10,11,13);
	 setarray @c[2],192,162,235,166,202,206,202,208,225,202,202,214,263,196,217,201,87,121,277,181,221,185,175,200,174,197;
	 Disp("Rachel Field",1,13); Pick("ra_fild");
F24: setarray @c[2],219,205,177,206,194,182,224,170,198,216,156,187,185,263,206,228,208,238,209,223,85,97,207,202,31,195,38,195;
	 Disp("Sograt Desert 1:Sograt Desert 2:Sograt Desert 3:Sograt Desert 7:Sograt Desert 11:Sograt Desert 12:Sograt Desert 13:Sograt Desert 16:Sograt Desert 17:Sograt Desert 18:Sograt Desert 19:Sograt Desert 20:Sograt Desert 21:Sograt Desert 22");
	 Pick("","moc_fild01","moc_fild02","moc_fild03","moc_fild07","moc_fild11","moc_fild12","moc_fild13","moc_fild16","moc_fild17","moc_fild18","moc_fild19","moc_fild20","moc_fild21","moc_fild22");
F25: setarray @c[2],175,186,236,184,188,204;
	 Disp("Splendide Field",1,3); Pick("spl_fild");
F26: setarray @c[2],217,206,223,221,237,215,202,197;
	 Disp("Umbala Field",1,4); Pick("um_fild");
F27: Restrict("Pre-RE",5);
	 setarray @c[2],186,175,196,370,222,45,51,250,202,324,150,223,149,307;
	 Disp("Veins Field",1,7); Pick("ve_fild");
F28: Restrict("Pre-RE",5,10);
	 setarray @c[2],189,224,192,207,221,157,226,199,223,177,187,232,231,174,196,203,183,214,200,124,195,226,210,304;
	 Disp("Yuno Field",1,12); Pick("yuno_fild");

// --------------------------------------------------
	Dungeons:
// --------------------------------------------------
menu	"Abyss Lakes",D1, "Amatsu Dungeon",D2, "Anthell",D3,
    	"Ayothaya Dungeon",D4, "Beach Dungeon",D5, /*"Bifrost Tower",D41,*/
    	"Bio Labs",D6, "Brasilis Dungeon",D7, "Byalan Dungeon",D8, "Clock Tower",D9,
    	"Coal Mines",D10, "Culvert",D11, "Cursed Abbey",D12, "Dewata Dungeon",D13,
    	"Einbroch Dungeon",D14, /*"Gefenia",D15,*/ "Geffen Dungeon",D16,
    	"Glast Heim",D17, "Gonryun Dungeon",D18, "Hidden Dungeon",D19,
    	"Ice Dungeon",D20, /*"Juperos",D21,*/ "Kiel Dungeon",D22, "Louyang Dungeon",D23,
    	"Magma Dungeon",D24, "Malangdo Dungeon",D25, "Moscovia Dungeon",D26,
    	"Nidhogg's Dungeon",D27, "Odin Temple",D28, "Orc Dungeon",D29,
    	"Payon Dungeon",D30, "Pyramids",D31, "Rachel Sanctuary",D32,
    	"Scaraba Hole",D33, "Sphinx",D34, "Sunken Ship",D35, "Thanatos Tower",D36,
    	"Thor Volcano",D37, "Toy Factory",D38, "Turtle Dungeon",D39, "Umbala Dungeon",D40;

D1: setarray @c[2],261,272;
	Disp("Abyss Lakes01",1); Pick("abyss_");
D2: setarray @c[2],228,11;
	Disp("Amatsu Dungeon01",1); Pick("ama_dun");
D3: setarray @c[2],35,262;
	Disp("Anthell01",1); Pick("anthell");
D4: setarray @c[2],275,19;
	Disp("Ancient Shrine Maze"); Pick("ayo_dun");
D5: setarray @c[2],266,67,255,244,23,260;
	Disp("Beach Dungeon",1,3); Pick("","beach_dun","beach_dun2","beach_dun3");
D6: Restrict("RE",4);
	setarray @c[2],150,288;
	Disp("Bio Lab01",1); Pick("lhz_dun");
D7: Restrict("RE");
	setarray @c[2],87,47;
	Disp("Brasilis Dungeon01",1); Pick("bra_dun");
D8: Restrict("RE",6);
	setarray @c[0],168,168;
	Disp("Byalan Dungeon01",1); Pick("iz_dun",1);
D9: setarray @c[2],199,159;
	Disp("Clock Tower 1");
	Pick("","c_tower1","c_tower2","c_tower3","c_tower4","alde_dun01","alde_dun02","alde_dun03","alde_dun04");
D10: setarray @c[2],52,17;
	 Disp("Coal Mines01",1); Pick("mjo_dun");
D11: setarray @c[2],131,247;
	 Disp("Culvert01",1); Pick("","prt_sewb1","prt_sewb2","prt_sewb3","prt_sewb4");
D12: setarray @c[2],51,14;
	 Disp("Cursed Abbey01",1); Pick("abbey");
D13: Restrict("RE");
	 setarray @c[2],285,160;
	 Disp("Dewata Dungeon01",1); Pick("dew_dun");
D14: setarray @c[2],22,14;
	 Disp("Einbroch Dungeon01",1); Pick("ein_dun");
//D15: setarray @c[2],40,103,203,34,266,168,130,272;
//	 Disp("Gefenia",1,4); Pick("gefenia",0);
D16: setarray @c[0],104,99;
	 Disp("Geffen Dungeon01",1); Pick("gef_dun",1);
D17: setarray @c[2],370,304;
	 Disp("Entrance");
	 Pick("","glast_01","gl_cas01","gl_cas02","gl_knt01","gl_knt02","gl_chyard","gl_sew01","gl_sew02","gl_sew03","gl_sew04","gl_church","gl_step","gl_dun01","gl_dun02","gl_prison","gl_prison1","gl_in01");
D18: setarray @c[2],153,53;
	 Disp("Gonryun Dungeon01",1); Pick("gon_dun");
D19: setarray @c[2],176,7;
	 Disp("Hidden Dungeon01",1); Pick("prt_maze");
D20: setarray @c[2],157,14;
	 Disp("Ice Dungeon01",1); Pick("ice_dun");
//D21: setarray @c[2],140,51,53,247,37,63,150,285;
//	 Disp("Entrance:Juperos 1:Juperos 2:Core");
//	 Pick("","jupe_cave","juperos_01","juperos_02","jupe_core");
D22: setarray @c[2],28,226;
	 Disp("Kiel Dungeon01",1); Pick("kh_dun");
D23: setarray @c[2],218,1968;
	 Disp("The Royal Tomb"); Pick("lou_dun");
D24: setarray @c[2],126,68;
	 Disp("Magma Dungeon01",1); Pick("mag_dun");
D25: Restrict("RE");
	 setarray @c[2],33,230;
	 Disp("Malangdo Dungeon",1,1); Pick("mal_dun");
D26: setarray @c[2],189,48;
	 Disp("Moscovia Dungeon01",1); Pick("mosk_dun");
D27: setarray @c[2],61,2391;
	 Disp("Nidhogg's Dungeon01",1); Pick("nyd_dun");
D28: setarray @c[2],298,167;
	 Disp("Odin Temple01",1); Pick("odin_tem");
D29: setarray @c[2],32,170;
	 Disp("Orc Dungeon01",1); Pick("orcsdun");
D30: setarray @c[0],21,183;
	 Disp("Payon Dungeon01",1); Pick("pay_dun",1);
D31: Restrict("RE",7,8);
	 setarray @c[2],192,9;
	 Disp("Pyramids01");
	 Pick("","moc_pryd01","moc_pryd02","moc_pryd03","moc_pryd04","moc_pryd05","moc_pryd06","moc_prydn1","moc_prydn2");
D32: setarray @c[2],140,11;
	 Disp("Rachel Sanctuary01",1); Pick("ra_san");
D33: Restrict("RE");
	 setarray @c[2],364,44;
	 Disp("Scaraba Hole01",1); Pick("dic_dun");
D34: setarray @c[2],288,9,149,81,210,54,10,222,100,99;
	 Disp("Sphinx01",1); Pick("","in_sphinx1","in_sphinx2","in_sphinx3","in_sphinx4","in_sphinx5");
D35: setarray @c[2],69,24;
	 Disp("Sunken Ship01",1); Pick("treasure");
D36: setarray @c[2],150,39;
	 Disp("Thanatos Tower01",1); Pick("tha_t");
D37: setarray @c[2],21,228;
	 Disp("Thor Volcano01",1); Pick("thor_v");
D38: setarray @c[2],205,15;
	 Disp("Toy Factory01",1); Pick("xmas_dun");
D39: setarray @c[2],154,49;
	 Disp("Entrance"); Pick("tur_dun");
D40: Restrict("RE",1,2);
	 setarray @c[2],110,285;
	 Disp("Yggdrasill's Root");
	 Pick("","umbala","um_dun02","yggdrasil01");
//D41: Restrict("RE");
//	 setarray @c[2],57,13;
//	 Disp("Bifrost Tower",1); Pick("ecl_tdun");

// --------------------------------------------------
	Castles:
// --------------------------------------------------
menu	/*"Aldebaran Castles",C1,*/ /*"Geffen Castles",C2,*/ /*"Schwaltzvalt Castles",C3,*/
    	/*"Prontera Castles",C4,*/ /*"Arunafeltz Castles",C5,*/ "Payon Castles",C6;

//C1: setarray @c[2],48,83,95,249,142,85,239,242,264,90;
//	Disp("Neuschwanstein:Hohenschwangau:Nuenberg:Wuerzburg:Rothenburg");
//	Pick("","alde_gld","alde_gld","alde_gld","alde_gld","alde_gld");
//C2: setarray @c[2],214,75,308,240,143,240,193,278,305,87;
//	Disp("Repherion:Eeyolbriggar:Yesnelph:Bergel:Mersetzdeitz");
//	Pick("","gef_fild13","gef_fild13","gef_fild13","gef_fild13","gef_fild13");
//C3: setarray @c[2],293,100,288,252,97,196,137,90,71,315;
//	Disp("Himinn:Andlangr:Viblainn:Hljod:Skidbladnir");
//	Pick("","sch_gld","sch_gld","sch_gld","sch_gld","sch_gld");
//C4: setarray @c[2],134,65,240,128,153,137,111,240,208,240;
//	Disp("Kriemhild:Swanhild:Fadhgridh:Skoegul:Gondul");
//	Pick("","prt_gld","prt_gld","prt_gld","prt_gld","prt_gld");
//C5: setarray @c[2],158,272,83,47,68,155,299,345,292,107;
//	Disp("Mardol:Cyr:Horn:Gefn:Banadis");
//	Pick("","aru_gld","aru_gld","aru_gld","aru_gld","aru_gld");
C6: setarray @c[2],140,160;
	Disp("Sacred Altar");
	Pick("","pay_gld","pay_gld","pay_gld","pay_gld","pay_gld");

// --------------------------------------------------
	Guild_Dungeons:
// --------------------------------------------------
menu	"Baldur",G1, "Luina",G2, "Valkyrie",G3, "Britoniah",G4,
    	"Arunafeltz",G5, "Schwaltzvalt",G6;

G1: Restrict("RE",2,3);
	setarray @c[2],119,93;
	Disp("Baldur F1");
	Pick("","gld_dun01","gld_dun01_2","gld2_pay");
G2: Restrict("RE",2,3);
	setarray @c[2],39,161;
	Disp("Luina F1");
	Pick("","gld_dun02","gld_dun02_2","gld2_ald");
G3: Restrict("RE",2,3);
	setarray @c[2],50,44;
	Disp("Valkyrie F1");
	Pick("","gld_dun03","gld_dun03_2","gld2_prt");
G4: Restrict("RE",2,3);
	setarray @c[2],116,45;
	Disp("Britoniah F1");
	Pick("","gld_dun04","gld_dun04_2","gld2_gef");
G5: Go("arug_dun01",199,195);
G6: Go("schg_dun01",200,124);

// --------------------------------------------------
	Instances:
// --------------------------------------------------
menu	"Bakonawa Lake",I1, "Bangungot Hospital 2F",I2, "Buwaya Cave",I3,
    	"Endless Tower",I4, "Geffen Magic Tournament",I13, "Ghost Palace",I15, "Hazy Forest",I5, "Malangdo Culvert",I6, "Nidhoggur's Nest",I7, "Nightmarish Jitterbug",I14,
    	"Octopus Cave",I8, "Old Glast Heim",I9, "Orc's Memory",I10, "Sealed Shrine",I11,
    	"Wolfchev's Laboratory",I12;

I1: Restrict("RE");
	Go("ma_scene01",172,175);
I2: Restrict("RE");
	Go("ma_dun01",151,8);
I3: Restrict("RE");
	Go("ma_fild02",316,317);
I4: Go("e_tower",72,112);
I5: Restrict("RE");
	Go("bif_fild01",161,334);
I6: Restrict("RE");
	Go("mal_in01",164,21);
I7: Go("nyd_dun02",95,193);
I8: Restrict("RE");
	Go("mal_dun01",152,230);
I9: Restrict("RE");
	Go("glast_01",204,268);
I10: Go("gef_fild10",240,198);
I11: Go("monk_test",306,143);
I12: Restrict("RE");
	Go("lighthalzen",305,302);
I13: Restrict("RE");
	Go("dali",95,144);
I14: Restrict("RE");
	Go("moc_para01",27,90);
I15: Restrict("RE");
	Go("dali02",48,127);

// --------------------------------------------------
	Special:
// --------------------------------------------------
menu	"Auction Hall",S1, "Battlegrounds",S2, "Casino",S3, "Eden Group Headquarters",S4,
    	"Gonryun Arena",S5, "Izlude Arena",S6, "Monster Race Arena",S7, "Turbo Track",S8;

S1: Go("auction_01",22,68);
S2: Go("bat_room",154,150);
S3: Go("cmd_in02",179,129);
S4: Restrict("RE");
	Go("moc_para01",31,14);
S5: Go("gon_test",48,10);
S6: Go("arena_room",100,88);
S7: Go("p_track01",62,41);
S8: Go("turbo_room",99,114);
}
